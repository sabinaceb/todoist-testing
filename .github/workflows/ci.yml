name: Todoist Test Automation using Python

on:
  [push, pull_request]
  
jobs:
  api-testing:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'latest'
    - name: Install Dependencies
      run: |
        pip install poetry
        poetry install
        npm install -g allure-commandline
    - name: Run API tests
      env:
        TODOIST_API_TOKEN: ${{ secrets.TODOIST_API_TOKEN }}
      run: poetry run behave features/api -f allure_behave.formatter:AllureFormatter -o allure-results/api
    - name: Generate Allure report for API tests
      run: allure generate allure-results/api -o reporter/API_tests_results --clean


  ui-testing:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - {os: "Windows", osVersion: "10", browserName: "Chrome", browserVersion: "latest"}
          - {os: "OS X", osVersion: "Sequoia", browserName: "Safari", browserVersion: "latest"}
    steps:
    - name: BrowserStack Env Setup
      uses: browserstack/github-actions/setup-env@master
      with:
        username: ${{ secrets.BROWSERSTACK_USERNAME }}
        access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
    - name: BrowserStack Local Tunnel Setup
      uses: browserstack/github-actions/setup-local@master
      with:
        local-testing: start
        local-identifier: random
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'latest'
    - name: Install Dependencies
      run: |
        pip install poetry
        poetry install
        npm install -g allure-commandline
    - name: Run UI tests
      env:
        USERNAME_ENV: ${{ secrets.TODOIST_USERNAME }}
        PASSWORD_ENV: ${{ secrets.TODOIST_PASSWORD }}
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
        BROWSERSTACK_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        RUN_ON_BROWSERSTACK: "True"
      run: poetry run behave features/ui -D os="${{ matrix.platform.os }}" -D os_version="${{ matrix.platform.osVersion }}" -D browser="${{ matrix.platform.browserName }}" -D browser_version="${{ matrix.platform.browserVersion }}" -f allure_behave.formatter:AllureFormatter -o "allure-results/ui-${{ matrix.platform.os }}${{ matrix.platform.browserName }}"
    - name: Generate Allure report for UI tests
      run: allure generate "allure-results/ui-${{ matrix.platform.os }}${{ matrix.platform.browserName }}" -o "reporter/UI_tests_results_${{ matrix.platform.os }}${{ matrix.platform.browserName }}" --clean
    - name: BrowserStackLocal Stop
      uses: browserstack/github-actions/setup-local@master
      with:
          local-testing: stop
  
  deploy_reporter:
    if: always()
    needs: [api-testing, ui-testing]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Deploy to Github Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./allure_reporter
